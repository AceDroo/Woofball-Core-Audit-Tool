---
stages:
  - lint
  - build
  - create release
  - publish

variables:
  ARTIFACT_DIR: "artifacts-$CI_COMMIT_SHORT_SHA"

image: registry.gitlab.com/woofball/woof-docker:latest

before_script:
  - export
  - flutter --version
  # currently all jobs need to run from the src dir
  # this could change, so here's a comment to remind everyone
  - mkdir -p ${ARTIFACT_DIR}
  - cd src/

lint:
  stage: lint
  script:
    - flutter analyze
  when: always

build appbundle:
  stage: build
  script:
    - flutter build appbundle
    - ls build/app/outputs/bundle/release
    - mkdir -p ../${ARTIFACT_DIR}/appbundle
    - echo "==CHECKING CONTENTS OF src/=="
    - mv build/app/outputs/bundle/* ../${ARTIFACT_DIR}/appbundle
  artifacts:
    paths:
      - "${ARTIFACT_DIR}/**"
    expire_in: 2 days
  when: manual
  except:
    - master
    - tags

build apk release:
  stage: build
  script:
    - flutter build apk --split-per-abi
    - ls -la build/app/outputs/apk/release
    - mkdir -p ../${ARTIFACT_DIR}/apk
    - mv build/app/outputs/apk/release/* ../${ARTIFACT_DIR}/apk
  artifacts:
    paths:
      - "${ARTIFACT_DIR}/**"
    expire_in: 2 days
  only:
    - master
    - tags

build appbundle release:
  stage: build
  script:
    - flutter build appbundle
    - ls build/app/outputs/bundle/release
    - mkdir -p ../${ARTIFACT_DIR}/appbundle
    - mv build/app/outputs/bundle/release/* ../${ARTIFACT_DIR}/appbundle
  artifacts:
    paths:
      - "${ARTIFACT_DIR}/**"
    expire_in: 2 days
  only:
    - master
    - tags

create release:
  stage: create release
  before_script:
    - echo "Making release..."
    - mkdir -p ${ARTIFACT_DIR}/release
  script:
    - tar -czvf ${ARTIFACT_DIR}/release/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}.tar.gz ${ARTIFACT_DIR}/apk ${ARTIFACT_DIR}/appbundle
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
      - "${ARTIFACT_DIR}/release/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}.tar.gz"
  only:
    - tags

publish release:
  stage: publish
  before_script:
    - echo "Publishing release..."
    - cd ${ARTIFACT_DIR}/release
  script:
    - pip3 install gitlab-release
    - gitlab-release --release_tag ${CI_COMMIT_REF_NAME} ${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}.tar.gz
  only:
    - tags
